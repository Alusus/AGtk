import "Apm.alusus";
Apm.importFile("Alusus/Gtk");
import "Build.alusus";

def HelloWorld: module
{
  def window: ptr[Gtk.AppWindow];

  @expname[main] func start {
    def app: ptr[Gtk.App];
    def status: Int;

    app = Gtk.App.new("org.alusus.gtk-hello-world", 0);
    Glib.connectSignal(app, Gtk.Signal.ACTIVATE, activate~ptr~cast[ptr[function]], 0, 0, 0);
    status = Gtk.App.exec(app, 0, 0);
    Glib.unref(app);
  };

  func activate (app: ptr[Gtk.App], data: ptr): Void {
    def box: ptr[Gtk.Box];
    def label: ptr[Gtk.Label];
    def buttonBox: ptr[Gtk.ButtonBox];
    def aboutButton: ptr[Gtk.Button];
    def quitButton: ptr[Gtk.Button];

    window = Gtk.AppWindow.new(app);
    Gtk.Window.setTitle(window, "Alusus GTK Hello World");
    Gtk.Window.setDefaultSize(window, 480, 320);

    box = Gtk.Box.new(Gtk.Orientation.VERTICAL, 20);

    label = Gtk.Label.new("Hello World!");

    buttonBox = Gtk.ButtonBox.new(Gtk.Orientation.HORIZONTAL);
    Gtk.ButtonBox.setLayout(buttonBox, Gtk.ButtonBoxStyle.SPREAD);

    aboutButton = Gtk.Button.newWithLabel("About");
    Glib.connectSignal(aboutButton, Gtk.Signal.CLICKED, onAboutClicked~ptr~cast[ptr[function]], 0, 0, 0);
    Gtk.Container.add(buttonBox, aboutButton);

    quitButton = Gtk.Button.newWithLabel("Quit");
    Glib.connectSignal(quitButton, Gtk.Signal.CLICKED, onQuitClicked~ptr~cast[ptr[function]], 0, 0, 0);
    Gtk.Container.add(buttonBox, quitButton);

    Gtk.Box.packStart(box, label, 1, 0, 0);
    Gtk.Box.packStart(box, buttonBox, 1, 0, 0);

    Gtk.Container.add(window, box);

    Gtk.Widget.showAll(window);
  };

  func onAboutClicked (widget: ptr[Gtk.Widget], data: ptr): Void {
    def dialog: ptr[Gtk.MessageDialog];
    dialog = Gtk.MessageDialog.new(
      window~cast[ptr[Gtk.Window]], 0, Gtk.MessageType.INFO, Gtk.ButtonsType.CLOSE, "Alusus GTK Hello World.\nauthor: Sarmad Abdullah"
    );
    Gtk.Dialog.exec(dialog);
    Gtk.Widget.destroy(dialog);
  };

  func onQuitClicked (widget: ptr[Gtk.Widget], data: ptr): Void {
    Gtk.Widget.destroy(window);
  };
};

if Process.argCount < 3 {
  HelloWorld.start();
} else {
  def exe: ptr[Build.Exe] = Build.Exe.new(HelloWorld.start~ast, Process.args~cnt(Process.argCount - 1));
  Build.Exe.addDependency(exe, Gtk~ast);
  if Build.Exe.generate(exe) {
    Srl.Console.print("Build complete.\n");
  } else {
    Srl.Console.print("Build failed.\n");
  };
};

